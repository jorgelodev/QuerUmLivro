// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuerUmLivro.Infra.Data.Context;

#nullable disable

namespace QuerUmLivro.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231029202340_RelacionamentoUsuarioInteresse")]
    partial class RelacionamentoUsuarioInteresse
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuerUmLivro.Domain.Entities.Interesse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aprovado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("InteressadoId")
                        .HasColumnType("int");

                    b.Property<string>("Justificativa")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("LivroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InteressadoId");

                    b.HasIndex("LivroId");

                    b.ToTable("Interesse", (string)null);
                });

            modelBuilder.Entity("QuerUmLivro.Domain.Entities.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Disponivel")
                        .HasColumnType("bit");

                    b.Property<int>("DoadorId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Livro", (string)null);
                });

            modelBuilder.Entity("QuerUmLivro.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("QuerUmLivro.Domain.Entities.Interesse", b =>
                {
                    b.HasOne("QuerUmLivro.Domain.Entities.Usuario", "Interessado")
                        .WithMany("Interesses")
                        .HasForeignKey("InteressadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("QuerUmLivro.Domain.Entities.Livro", "Livro")
                        .WithMany("Interesses")
                        .HasForeignKey("LivroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Interessado");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("QuerUmLivro.Domain.Entities.Livro", b =>
                {
                    b.Navigation("Interesses");
                });

            modelBuilder.Entity("QuerUmLivro.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Interesses");
                });
#pragma warning restore 612, 618
        }
    }
}
